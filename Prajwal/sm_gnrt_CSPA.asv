function  CSPA = sm_gnrt_CSPA(ang_dst, eps, q, m, REF_CAT)           
%function to generate the candidate star pair array from the measured value
%of the angular distance
%% Add paths
addpath(genpath('.\Prajwal'));

K_VEC = REF_CAT(:, 5); % Extract K-Vector from Reference catalogue

%% Calculate constants
s = sqrt( 1- ang_dst^2 );
k_bot = floor( (ang_dst*cos(eps) - s*sin(eps) - q) / m ); % Lower index
k_top = ceil( (ang_dst*cos(eps) + s*sin(eps) - q) / m ); % Upper index

start = K_VEC(k_bot) + 1;
stop = K_VEC(k_top);

%len = start - stop; % Length of the CSPA
%len = len + 1; 
%disp(k_bot);disp(K_VEC(k_bot));
%disp(k_top);disp(K_VEC(k_top));

%% Calculate Candidate Star Pair Array
if (len == 0)
    idx = stop;
    st_ID1 = REF_CAT(idx, 2);
    st_ID2 = REF_CAT(idx, 3);
    CSPA = [st_ID1, st_ID2];
    
else
    CSPA = [];
    for idx = start:stop
        st_ID1 = REF_CAT(idx, 2);
        st_ID2 = REF_CAT(idx, 3);
        
        tmp = [st_ID1, st_ID2];
        CSPA = [CSPA, tmp];
    end
        
end
end